<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
</head>
<body>
    <h1>Операторы в PHP</h1>
    <p>
        <ol>
            <li>Оператор присваинвания (=)</li>
            <li>Оператор присваивания по ссылке (&)</li>
            <li>Побитовые операторы</li>
            <li>Операторы сравнения (==, ===)</li>
            <li>Оператор управления ошибками (@)</li>
            <li>Оператор исполнения (обратные кавычки (``)</li>
            <li>Оператор инкремента, декремента(++, --)</li>
            <li>Логические операторы (and, or. реже xor, !, и не пайтоновские нормальные &&, ||)</li>
            <li>Строковые операторы их всего 2.(1)Конкатенация . (символ точки), 2)оператор присваивания с конкатенацией ('.='), который присоединяет правый аргумент к левому. )</li>
            <li>Операторы, работающие с массивами (Знак объедиения +, который соединяет 2 массива, знак == сравнивает 2 массива, вернёт ТРУ или ФоЛС)</li>
            <li>Оператор <b>instanceof</b> используется для определения того, является ли текущий объект экземпляром указанного класса. </li>    
        
        </ol>
    </p>
    <hr>
    <?php
        //Оператор присваивания - позволяет записывать значения в переменные
        $some_variables = 1;
        echo "1. Тут знак равно присваивает правое значение <br><hr>";
        //Оператор присваивания по ссылке - указывает на ту же область памяти, что не копирует значение
        $ptr_var = &$some_variables;
        $ptr_var = "string";
        echo "2. Переменная some_variables изменяется, когда изменяется другая, обозначеная знаком ссылки ".$some_variables . "<br><hr>";

        //Побитовые операторы & | TODO что нибудь под вывод, работа с битами целых чисел , привет Си 

        //Операторы сравнения
        $name = "Alex";
        $name_Alex = "Alex";
        echo "3. Сравнение строк " . var_dump(($name == $name_Alex)); // -> Alex == Alex => true
        echo "<br><hr>";

        $age = "22";
        $int = 22;
        echo "3.2. Сравнение числа и строки, строка каститься в инт, и сравниваются 2 числа";
        var_dump(($age == $int)); // -> 22 == 22 -> true
        echo "<br><hr>";
        echo "3.3. Если в строке нет числе, и не позвомжно спарсить числа, то она вернёт 0";
        var_dump($name == 0); // -> alex == 0 -> true
        echo "<br>";
        
        //Оператор идентичности ===
        echo "3.4. Если сравнивать оператором идентичности (===), то сравниваться буду типы, а потом значения т.е. из - за разных типов теперь будет false ";
        var_dump(($age === $int)); // str === int -> false
        echo "<br><hr>";
        echo "4. PHP поддерживает один оператор управления ошибками: знак @. В случае, если он предшествует какому-либо выражению в PHP-коде, любые сообщения об ошибках, генерируемые этим выражением, будут проигнорированы.<br> ";
    ?>
</body>
</html>